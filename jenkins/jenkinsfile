pipeline {
   agent {
    label 'cimachine'
   }
   options {
    buildDiscarder(logRotator(numToKeepStr: '7'))
    timeout(time: 1, unit: 'HOURS') 
   }
   parameters {
     string(name: 'Branchname', defaultValue: 'springapp')
     string(name: 'Imagename', defaultValue: 'springapp')
     string(name: 'ImageTag', defaultValue: 'latest')
   }
   environment {
     DOCKER_REPO_CREDS =  credentials('docker-registry-creds')
     SCANNER_HOME = tool 'sonar-scanner'
   } 
  
   stages {
    stage("App Code Checkout") {
      steps {
        git branch: "${params.Branchname}", url: 'https://github.com/prateekkumawat/jenkins-mansi-project.git'
      }
    }
    
    stage('Sonarqube Check') {
     steps {
      dir('src/') {
        withSonarQubeEnv('sonar-server') {
                        sh ''' $SCANNER_HOME/bin/sonar-scanner \
                        -Dsonar.projectName=springapp-learning-basic \
                        -Dsonar.python.version=3.11 \
                        -Dsonar.projectKey=springapp-learning-basic '''
        }
      }
     }
    }
    stage('QualityGate Check') {
      steps {
        script {
          waitForQualityGate abortPipeline: false, credentialsId: 'sonar-token' 
          }
      }
    }
    stage('Trivy CodeScan'){
      steps{
        dir('src/') {
          sh ' trivy fs . > /tmp/trivyfs.txt'
        }
      }
    }
    
    stage("Build Docker Image"){
      steps {
        sh " docker build -t ${params.Imagename}:${params.ImageTag} . "
      }
    }

    stage("Trivy ImageScan"){
      steps {
        sh " trivy image ${params.Imagename}:${params.ImageTag} > /tmp/trivyimage.txt "
      }
    } 

    stage("Tag Imageregistry"){
      steps {
        sh "docker tag ${params.Imagename}:${params.ImageTag}  $DOCKER_REPO_CREDS_USR/${params.Imagename}:${params.ImageTag}"
        sh " docker login -u  $DOCKER_REPO_CREDS_USR -p $DOCKER_REPO_CREDS_PSW "
        sh " docker push $DOCKER_REPO_CREDS_USR/${params.Imagename}:${params.ImageTag} "
      }
    }
  }
}